<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.book.mapper.OrderMapper" >
  <resultMap id="BaseResultMap" type="com.book.entity.Order" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="order_id" property="order_id" jdbcType="VARCHAR" />
    <result column="totalPrice" property="totalPrice" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
    <result column="user_id" property="user_id" jdbcType="INTEGER" />
    <result column="address_id" property="address_id" jdbcType="INTEGER" />
    <result column="pay_way" property="pay_way" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, order_id, totalPrice, status, createTime, user_id, address_id, pay_way
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from `order`
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from `order`
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.book.entity.Order" >
    insert into `order` (id, order_id, totalPrice,
      status, createTime, user_id, 
      address_id, pay_way)
    values (#{id,jdbcType=INTEGER}, #{order_id,jdbcType=VARCHAR}, #{totalPrice,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{user_id,jdbcType=INTEGER}, 
      #{address_id,jdbcType=INTEGER}, #{pay_way,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.book.entity.Order" >
    insert into `order`
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="order_id != null" >
        order_id,
      </if>
      <if test="totalPrice != null" >
        totalPrice,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createTime != null" >
        createTime,
      </if>
      <if test="user_id != null" >
        user_id,
      </if>
      <if test="address_id != null" >
        address_id,
      </if>
      <if test="pay_way != null" >
        pay_way,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="order_id != null" >
        #{order_id,jdbcType=VARCHAR},
      </if>
      <if test="totalPrice != null" >
        #{totalPrice,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="user_id != null" >
        #{user_id,jdbcType=INTEGER},
      </if>
      <if test="address_id != null" >
        #{address_id,jdbcType=INTEGER},
      </if>
      <if test="pay_way != null" >
        #{pay_way,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.book.entity.Order" >
    update `order`
    <set >
      <if test="order_id != null" >
        order_id = #{order_id,jdbcType=VARCHAR},
      </if>
      <if test="totalPrice != null" >
        totalPrice = #{totalPrice,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="user_id != null" >
        user_id = #{user_id,jdbcType=INTEGER},
      </if>
      <if test="address_id != null" >
        address_id = #{address_id,jdbcType=INTEGER},
      </if>
      <if test="pay_way != null" >
        pay_way = #{pay_way,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateByOrderIdSelective" parameterType="com.book.entity.Order" >
    update `order`
    <set >
      <if test="totalPrice != null" >
        totalPrice = #{totalPrice,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="user_id != null" >
        user_id = #{user_id,jdbcType=INTEGER},
      </if>
      <if test="address_id != null" >
        address_id = #{address_id,jdbcType=INTEGER},
      </if>
      <if test="pay_way != null" >
        pay_way = #{pay_way,jdbcType=INTEGER},
      </if>
    </set>
    where order_id = #{order_id,jdbcType=VARCHAR}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.book.entity.Order" >
    update `order`
    set order_id = #{order_id,jdbcType=VARCHAR},
      totalPrice = #{totalPrice,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      user_id = #{user_id,jdbcType=INTEGER},
      address_id = #{address_id,jdbcType=INTEGER},
      pay_way = #{pay_way,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getOrderByUserId" resultType="com.book.DTO.EveryOrderDto">
    select status,createTime,address_id,order_id,pay_way,totalPrice
    from `order` o
    <where>
      <if test="1 == 1">
        and o.user_id=#{userId,jdbcType=INTEGER}
      </if>
      <if test="status != null">
        and o.status=#{status,jdbcType=INTEGER}
      </if>
    </where>
    order by createTime desc;
  </select>

  <select id="getOrderBookByOrderId" resultType="com.book.DTO.OrderBookDto">
    select b.id,b.name,b.author,b.image1,o.price,o.count
    from orderdetail o,book b
    <where>
      <if test="1 == 1">
        and o.book_id=b.id
      </if>
      <if test="order_id != null">
        and o.order_id=#{order_id}
      </if>
    </where>
  </select>

  <select id="getNotApprBooksByUserID" resultType="Integer">
    select r.book_id
    from `order` o join orderdetail r
    on o.order_id=r.order_id and o.user_id=#{userId,jdbcType=INTEGER} and o.status=4 and r.is_remark=0;
  </select>
</mapper>